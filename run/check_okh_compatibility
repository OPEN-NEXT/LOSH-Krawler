#!/usr/bin/env sh
# SPDX-FileCopyrightText: 2023 Robin Vobruba <hoijui.quaero@gmail.com>
# SPDX-License-Identifier: Unlicense
#
# See the output of "$0 -h" for details.

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
#set -Eeuo pipefail
set -eu

script_path="$(readlink -f "$0")"
script_dir="$(dirname "$script_path")"
script_name="$(basename "$script_path")"
project_root=$(dirname "$script_dir")

# initial default values
APP_NAME="RDF Serialization check"

print_help() {

	echo "$APP_NAME - Compares this krawlers RDF serialization"
    echo "against the OKH LOSH ontology."
    echo "This check is very rudimentary!."
	echo
	echo "Usage:"
	echo "  $script_name [OPTION...]"
	echo "Options:"
	echo "  -h, --help"
	echo "    Shows this help message and exit"
	echo "Examples:"
	echo "  $script_name"
	echo "  $script_name --help"
}

# read command-line args
i=1
while [ "$i" -lt "$#" ]
do
	arg="$(eval "echo \$$i")"

	case "$arg" in
		-h|--help)
			shift "$i"
			print_help
			exit 0
			;;
		*) # non-/unknown option
			i=$((i + 1))
			;;
	esac
done

build_dir=build
mkdir -p "$build_dir"

grep -r "OKH\." krawl/serializer/rdf_serializer.py \
    | grep -v -e '^[ \t]*#' \
    | sed \
        -e 's/.*OKH\.//' \
        -e 's/[^.a-zA-Z0-9].*//' \
    | sort -u \
    > "$build_dir/rdf_okh_krawler.csv"

grep -r " OTRL\." krawl/serializer/rdf_serializer.py \
    | grep -v -e '^[ \t]*#' \
    | sed \
        -e 's/.*OTRL\.//' \
        -e 's/[^.a-zA-Z0-9].*//' \
    | sort -u \
    > "$build_dir/rdf_otrl_krawler.csv"


wget \
    https://github.com/iop-alliance/OpenKnowHow/raw/master/src/spec/okh.ttl \
    --output-document="$build_dir/OKH-LOSH.ttl"
wget \
    https://github.com/iop-alliance/OpenKnowHow/raw/master/src/spec/otrl.ttl \
    --output-document="$build_dir/OTRL.ttl"

grep '^okh:' \
    < "$build_dir/OKH-LOSH.ttl" \
    | sed -e 's/^okh://' \
    | sort -u \
    > "$build_dir/rdf_okh_ontology.csv"

grep '^otrl:' \
    < "$build_dir/OTRL.ttl" \
    | sed -e 's/^otrl://' \
    | sort -u \
    > "$build_dir/rdf_otrl_ontology.csv"


comm \
    -13 \
    "$build_dir/rdf_okh_ontology.csv" \
    "$build_dir/rdf_okh_krawler.csv" \
    > "$build_dir/rdf_okh_bad.csv"
okh_bad=$(wc -l "$build_dir/rdf_okh_bad.csv" | sed -e 's/ .*//')

comm \
    -13 \
    "$build_dir/rdf_otrl_ontology.csv" \
    "$build_dir/rdf_otrl_krawler.csv" \
    > "$build_dir/rdf_otrl_bad.csv"
otrl_bad=$(wc -l "$build_dir/rdf_otrl_bad.csv" | sed -e 's/ .*//')

if [ "$okh_bad" -gt 0 ]
then
    >&2 echo "ERROR: Krawler uses $okh_bad RDF elements from 'okh:*' that are not in the ontology:"
    while read -r elem
    do
        >&2 echo "ERROR: - okh:$elem"
    done < "$build_dir/rdf_okh_bad.csv"
    exit 1
fi

if [ "$otrl_bad" -gt 0 ]
then
    >&2 echo "ERROR: Krawler uses $otrl_bad RDF elements from 'otrl:*' that are not in the ontology:"
    while read -r elem
    do
        >&2 echo "ERROR: - otrl:$elem"
    done < "$build_dir/rdf_otrl_bad.csv"
    exit 2
fi
